/*
 * Copyright (c) 2019 kojin15
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.kojin15.workbenchplus

import com.kojin15.workbenchplus.WorkbenchPlus.MOD_ID
import com.kojin15.workbenchplus.WorkbenchPlus.MOD_NAME
import com.kojin15.workbenchplus.WorkbenchPlus.MOD_VERSION
import com.kojin15.workbenchplus.block.BlockWorkbenchPlus
import cpw.mods.fml.common.*
import cpw.mods.fml.common.event.FMLConstructionEvent
import cpw.mods.fml.common.event.FMLInitializationEvent
import cpw.mods.fml.common.event.FMLPostInitializationEvent
import cpw.mods.fml.common.event.FMLPreInitializationEvent
import cpw.mods.fml.relauncher.Side
import java.lang.reflect.Field
import java.lang.reflect.Method

/**
 * @author kojin15.
 */
@Mod(modid = MOD_ID, name = MOD_NAME, version = MOD_VERSION, acceptedMinecraftVersions = "[1.7.10]",
        modLanguage = "kotlin", modLanguageAdapter = "com.kojin15.workbenchplus.KotlinAdapter",
        useMetadata = true)
object WorkbenchPlus {
    const val MOD_ID = "workbenchplus"
    const val MOD_NAME = "Workbench Plus"
    const val MOD_VERSION = "1.0.0"

    @Mod.Metadata
    private lateinit var METADATA: ModMetadata

    @SidedProxy(clientSide = "com.kojin15.workbenchplus.proxy.ClientProxy",
            serverSide = "com.kojin15.workbenchplus.proxy.ServerProxy")
    lateinit var PROXY: CommonProxy

    @Mod.EventHandler
    fun construct(event: FMLConstructionEvent) {
        METADATA.modId = MOD_ID
        METADATA.name = MOD_NAME
        METADATA.version = MOD_VERSION
        METADATA.authorList.add("kojin15")
        METADATA.description = ""
        METADATA.autogenerated = false
    }

    @Mod.EventHandler
    fun preInit(event: FMLPreInitializationEvent) {
        PROXY.preInit()
    }

    @Mod.EventHandler
    fun init(event: FMLInitializationEvent) {
        PROXY.init()
    }

    @Mod.EventHandler
    fun postInit(event: FMLPostInitializationEvent) {
        PROXY.postInit()
    }

    object Blocks {
        @JvmField val workbenchplus = BlockWorkbenchPlus()
    }
}

class KotlinAdapter : ILanguageAdapter {
    override fun supportsStatics(): Boolean = false

    override fun setProxy(target: Field, proxyTarget: Class<*>, proxy: Any) {
        target.set(proxyTarget.kotlin.objectInstance, proxy)
    }

    override fun getNewInstance(container: FMLModContainer, objectClass: Class<*>, classLoader: ClassLoader, factoryMarkedAnnotation: Method?): Any? {
        return objectClass.kotlin.objectInstance ?: objectClass.newInstance()
    }

    override fun setInternalProxies(mod: ModContainer?, side: Side?, loader: ClassLoader?) = Unit
}